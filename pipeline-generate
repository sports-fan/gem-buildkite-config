#!/usr/bin/env ruby
# frozen_string_literal: true

require "json"
require "net/http"
require "pathname"
require "yaml"

QUEUE = ENV["BUILDKITE_AGENT_META_DATA_QUEUE"] || "default"

ARTIFACTS_PLUGIN = "artifacts#v1.2.0"
DOCKER_COMPOSE_PLUGIN = "docker-compose#v3.7.0"

REPO_ROOT = Pathname.new(ARGV.shift || File.expand_path("../..", __FILE__))


def available_tags_for_image(image)
  uri = URI("https://registry.hub.docker.com/v1/repositories/#{image}/tags")
  json = Net::HTTP.get(uri)
  JSON.parse(json).map { |x| x["name"] }
end

head_ruby_image = "rubylang/ruby:master-nightly-focal"

available_ruby_versions =
  available_tags_for_image("ruby").
  grep(/\A[0-9]+\.[0-9]+\z/).
  map { |s| Gem::Version.new(s) }.
  sort.
  reverse

ruby_images =
  if REPO_ROOT.glob("*.gemspec").first&.read =~ /required_ruby_version[^0-9]+([0-9]+\.[0-9]+)/
    min_ruby = Gem::Version.new($1 || "2.0")

    available_ruby_versions.
      select { |v| v >= min_ruby }
  else
    available_ruby_versions.first(4)
  end.map { |v| "ruby:#{v}" } +
  [head_ruby_image]

soft_fail_images = [head_ruby_image]

BUNDLER = "< 2.2.10"
RUBYGEMS = "3.2.9"

puts YAML.dump({
  "steps" => ruby_images.map do |ruby|
    {
      "label" => ":ruby: #{ruby}",
      "env" => {
        "RUBY_IMAGE" => ruby,
        "BUNDLER" => BUNDLER,
        "RUBYGEMS" => RUBYGEMS,
      },
      "plugins" => [
        {
          ARTIFACTS_PLUGIN => {
            "download" => [".dockerignore", ".buildkite/*"],
          },
        },
        {
          DOCKER_COMPOSE_PLUGIN => {
            "run" => "gem",
            "config" => ".buildkite/docker-compose.yml",
          }
        },
      ],
      "timeout_in_minutes" => 10,
      "soft_fail" => soft_fail_images.include?(ruby),
      "agents" => { "queue" => QUEUE },
      "retry" => { "automatic" => { "exit_status" => -1, "limit" => 2 } },
    }
  end
})
